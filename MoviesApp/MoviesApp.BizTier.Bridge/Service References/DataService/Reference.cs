//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MoviesApp.BizTier.Bridge.DataService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataService.IDataService")]
    public interface IDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetActorById", ReplyAction="http://tempuri.org/IDataService/GetActorByIdResponse")]
        MoviesApp.Models.Actor GetActorById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetActorById", ReplyAction="http://tempuri.org/IDataService/GetActorByIdResponse")]
        System.Threading.Tasks.Task<MoviesApp.Models.Actor> GetActorByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllActors", ReplyAction="http://tempuri.org/IDataService/GetAllActorsResponse")]
        System.Collections.Generic.List<MoviesApp.Models.Actor> GetAllActors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllActors", ReplyAction="http://tempuri.org/IDataService/GetAllActorsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MoviesApp.Models.Actor>> GetAllActorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetByName", ReplyAction="http://tempuri.org/IDataService/GetByNameResponse")]
        MoviesApp.Models.Actor GetByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetByName", ReplyAction="http://tempuri.org/IDataService/GetByNameResponse")]
        System.Threading.Tasks.Task<MoviesApp.Models.Actor> GetByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateActor", ReplyAction="http://tempuri.org/IDataService/CreateActorResponse")]
        MoviesApp.Models.Actor CreateActor(MoviesApp.Models.Actor actor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateActor", ReplyAction="http://tempuri.org/IDataService/CreateActorResponse")]
        System.Threading.Tasks.Task<MoviesApp.Models.Actor> CreateActorAsync(MoviesApp.Models.Actor actor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMovieById", ReplyAction="http://tempuri.org/IDataService/GetMovieByIdResponse")]
        MoviesApp.Models.Movie GetMovieById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMovieById", ReplyAction="http://tempuri.org/IDataService/GetMovieByIdResponse")]
        System.Threading.Tasks.Task<MoviesApp.Models.Movie> GetMovieByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllMovies", ReplyAction="http://tempuri.org/IDataService/GetAllMoviesResponse")]
        System.Collections.Generic.List<MoviesApp.Models.Movie> GetAllMovies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllMovies", ReplyAction="http://tempuri.org/IDataService/GetAllMoviesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MoviesApp.Models.Movie>> GetAllMoviesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetByTitle", ReplyAction="http://tempuri.org/IDataService/GetByTitleResponse")]
        MoviesApp.Models.Movie GetByTitle(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetByTitle", ReplyAction="http://tempuri.org/IDataService/GetByTitleResponse")]
        System.Threading.Tasks.Task<MoviesApp.Models.Movie> GetByTitleAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateMovie", ReplyAction="http://tempuri.org/IDataService/CreateMovieResponse")]
        MoviesApp.Models.Movie CreateMovie(MoviesApp.Models.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateMovie", ReplyAction="http://tempuri.org/IDataService/CreateMovieResponse")]
        System.Threading.Tasks.Task<MoviesApp.Models.Movie> CreateMovieAsync(MoviesApp.Models.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetActorTagById", ReplyAction="http://tempuri.org/IDataService/GetActorTagByIdResponse")]
        MoviesApp.Models.ActorTag GetActorTagById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetActorTagById", ReplyAction="http://tempuri.org/IDataService/GetActorTagByIdResponse")]
        System.Threading.Tasks.Task<MoviesApp.Models.ActorTag> GetActorTagByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllActorTags", ReplyAction="http://tempuri.org/IDataService/GetAllActorTagsResponse")]
        System.Collections.Generic.List<MoviesApp.Models.ActorTag> GetAllActorTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllActorTags", ReplyAction="http://tempuri.org/IDataService/GetAllActorTagsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MoviesApp.Models.ActorTag>> GetAllActorTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateActorTag", ReplyAction="http://tempuri.org/IDataService/CreateActorTagResponse")]
        MoviesApp.Models.ActorTag CreateActorTag(MoviesApp.Models.ActorTag actortag, int actorid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateActorTag", ReplyAction="http://tempuri.org/IDataService/CreateActorTagResponse")]
        System.Threading.Tasks.Task<MoviesApp.Models.ActorTag> CreateActorTagAsync(MoviesApp.Models.ActorTag actortag, int actorid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateActorTag", ReplyAction="http://tempuri.org/IDataService/UpdateActorTagResponse")]
        MoviesApp.Models.ActorTag UpdateActorTag(MoviesApp.Models.ActorTag actortag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateActorTag", ReplyAction="http://tempuri.org/IDataService/UpdateActorTagResponse")]
        System.Threading.Tasks.Task<MoviesApp.Models.ActorTag> UpdateActorTagAsync(MoviesApp.Models.ActorTag actortag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteActorTag", ReplyAction="http://tempuri.org/IDataService/DeleteActorTagResponse")]
        void DeleteActorTag(MoviesApp.Models.ActorTag actortag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteActorTag", ReplyAction="http://tempuri.org/IDataService/DeleteActorTagResponse")]
        System.Threading.Tasks.Task DeleteActorTagAsync(MoviesApp.Models.ActorTag actortag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMovieTagById", ReplyAction="http://tempuri.org/IDataService/GetMovieTagByIdResponse")]
        MoviesApp.Models.MovieTag GetMovieTagById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMovieTagById", ReplyAction="http://tempuri.org/IDataService/GetMovieTagByIdResponse")]
        System.Threading.Tasks.Task<MoviesApp.Models.MovieTag> GetMovieTagByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetByMovie", ReplyAction="http://tempuri.org/IDataService/GetByMovieResponse")]
        System.Collections.Generic.List<MoviesApp.Models.MovieTag> GetByMovie(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetByMovie", ReplyAction="http://tempuri.org/IDataService/GetByMovieResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MoviesApp.Models.MovieTag>> GetByMovieAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllMovieTags", ReplyAction="http://tempuri.org/IDataService/GetAllMovieTagsResponse")]
        System.Collections.Generic.List<MoviesApp.Models.MovieTag> GetAllMovieTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllMovieTags", ReplyAction="http://tempuri.org/IDataService/GetAllMovieTagsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MoviesApp.Models.MovieTag>> GetAllMovieTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateMovieTag", ReplyAction="http://tempuri.org/IDataService/CreateMovieTagResponse")]
        MoviesApp.Models.MovieTag CreateMovieTag(MoviesApp.Models.MovieTag movietag, string movieid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateMovieTag", ReplyAction="http://tempuri.org/IDataService/CreateMovieTagResponse")]
        System.Threading.Tasks.Task<MoviesApp.Models.MovieTag> CreateMovieTagAsync(MoviesApp.Models.MovieTag movietag, string movieid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateMovieTag", ReplyAction="http://tempuri.org/IDataService/UpdateMovieTagResponse")]
        MoviesApp.Models.MovieTag UpdateMovieTag(MoviesApp.Models.MovieTag movietag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateMovieTag", ReplyAction="http://tempuri.org/IDataService/UpdateMovieTagResponse")]
        System.Threading.Tasks.Task<MoviesApp.Models.MovieTag> UpdateMovieTagAsync(MoviesApp.Models.MovieTag movietag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteMovieTagRelationship", ReplyAction="http://tempuri.org/IDataService/DeleteMovieTagRelationshipResponse")]
        void DeleteMovieTagRelationship(MoviesApp.Models.MovieTag movietag, string movieid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteMovieTagRelationship", ReplyAction="http://tempuri.org/IDataService/DeleteMovieTagRelationshipResponse")]
        System.Threading.Tasks.Task DeleteMovieTagRelationshipAsync(MoviesApp.Models.MovieTag movietag, string movieid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServiceChannel : MoviesApp.BizTier.Bridge.DataService.IDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceClient : System.ServiceModel.ClientBase<MoviesApp.BizTier.Bridge.DataService.IDataService>, MoviesApp.BizTier.Bridge.DataService.IDataService {
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MoviesApp.Models.Actor GetActorById(int id) {
            return base.Channel.GetActorById(id);
        }
        
        public System.Threading.Tasks.Task<MoviesApp.Models.Actor> GetActorByIdAsync(int id) {
            return base.Channel.GetActorByIdAsync(id);
        }
        
        public System.Collections.Generic.List<MoviesApp.Models.Actor> GetAllActors() {
            return base.Channel.GetAllActors();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MoviesApp.Models.Actor>> GetAllActorsAsync() {
            return base.Channel.GetAllActorsAsync();
        }
        
        public MoviesApp.Models.Actor GetByName(string name) {
            return base.Channel.GetByName(name);
        }
        
        public System.Threading.Tasks.Task<MoviesApp.Models.Actor> GetByNameAsync(string name) {
            return base.Channel.GetByNameAsync(name);
        }
        
        public MoviesApp.Models.Actor CreateActor(MoviesApp.Models.Actor actor) {
            return base.Channel.CreateActor(actor);
        }
        
        public System.Threading.Tasks.Task<MoviesApp.Models.Actor> CreateActorAsync(MoviesApp.Models.Actor actor) {
            return base.Channel.CreateActorAsync(actor);
        }
        
        public MoviesApp.Models.Movie GetMovieById(string id) {
            return base.Channel.GetMovieById(id);
        }
        
        public System.Threading.Tasks.Task<MoviesApp.Models.Movie> GetMovieByIdAsync(string id) {
            return base.Channel.GetMovieByIdAsync(id);
        }
        
        public System.Collections.Generic.List<MoviesApp.Models.Movie> GetAllMovies() {
            return base.Channel.GetAllMovies();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MoviesApp.Models.Movie>> GetAllMoviesAsync() {
            return base.Channel.GetAllMoviesAsync();
        }
        
        public MoviesApp.Models.Movie GetByTitle(string title) {
            return base.Channel.GetByTitle(title);
        }
        
        public System.Threading.Tasks.Task<MoviesApp.Models.Movie> GetByTitleAsync(string title) {
            return base.Channel.GetByTitleAsync(title);
        }
        
        public MoviesApp.Models.Movie CreateMovie(MoviesApp.Models.Movie movie) {
            return base.Channel.CreateMovie(movie);
        }
        
        public System.Threading.Tasks.Task<MoviesApp.Models.Movie> CreateMovieAsync(MoviesApp.Models.Movie movie) {
            return base.Channel.CreateMovieAsync(movie);
        }
        
        public MoviesApp.Models.ActorTag GetActorTagById(int id) {
            return base.Channel.GetActorTagById(id);
        }
        
        public System.Threading.Tasks.Task<MoviesApp.Models.ActorTag> GetActorTagByIdAsync(int id) {
            return base.Channel.GetActorTagByIdAsync(id);
        }
        
        public System.Collections.Generic.List<MoviesApp.Models.ActorTag> GetAllActorTags() {
            return base.Channel.GetAllActorTags();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MoviesApp.Models.ActorTag>> GetAllActorTagsAsync() {
            return base.Channel.GetAllActorTagsAsync();
        }
        
        public MoviesApp.Models.ActorTag CreateActorTag(MoviesApp.Models.ActorTag actortag, int actorid) {
            return base.Channel.CreateActorTag(actortag, actorid);
        }
        
        public System.Threading.Tasks.Task<MoviesApp.Models.ActorTag> CreateActorTagAsync(MoviesApp.Models.ActorTag actortag, int actorid) {
            return base.Channel.CreateActorTagAsync(actortag, actorid);
        }
        
        public MoviesApp.Models.ActorTag UpdateActorTag(MoviesApp.Models.ActorTag actortag) {
            return base.Channel.UpdateActorTag(actortag);
        }
        
        public System.Threading.Tasks.Task<MoviesApp.Models.ActorTag> UpdateActorTagAsync(MoviesApp.Models.ActorTag actortag) {
            return base.Channel.UpdateActorTagAsync(actortag);
        }
        
        public void DeleteActorTag(MoviesApp.Models.ActorTag actortag) {
            base.Channel.DeleteActorTag(actortag);
        }
        
        public System.Threading.Tasks.Task DeleteActorTagAsync(MoviesApp.Models.ActorTag actortag) {
            return base.Channel.DeleteActorTagAsync(actortag);
        }
        
        public MoviesApp.Models.MovieTag GetMovieTagById(int id) {
            return base.Channel.GetMovieTagById(id);
        }
        
        public System.Threading.Tasks.Task<MoviesApp.Models.MovieTag> GetMovieTagByIdAsync(int id) {
            return base.Channel.GetMovieTagByIdAsync(id);
        }
        
        public System.Collections.Generic.List<MoviesApp.Models.MovieTag> GetByMovie(string id) {
            return base.Channel.GetByMovie(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MoviesApp.Models.MovieTag>> GetByMovieAsync(string id) {
            return base.Channel.GetByMovieAsync(id);
        }
        
        public System.Collections.Generic.List<MoviesApp.Models.MovieTag> GetAllMovieTags() {
            return base.Channel.GetAllMovieTags();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MoviesApp.Models.MovieTag>> GetAllMovieTagsAsync() {
            return base.Channel.GetAllMovieTagsAsync();
        }
        
        public MoviesApp.Models.MovieTag CreateMovieTag(MoviesApp.Models.MovieTag movietag, string movieid) {
            return base.Channel.CreateMovieTag(movietag, movieid);
        }
        
        public System.Threading.Tasks.Task<MoviesApp.Models.MovieTag> CreateMovieTagAsync(MoviesApp.Models.MovieTag movietag, string movieid) {
            return base.Channel.CreateMovieTagAsync(movietag, movieid);
        }
        
        public MoviesApp.Models.MovieTag UpdateMovieTag(MoviesApp.Models.MovieTag movietag) {
            return base.Channel.UpdateMovieTag(movietag);
        }
        
        public System.Threading.Tasks.Task<MoviesApp.Models.MovieTag> UpdateMovieTagAsync(MoviesApp.Models.MovieTag movietag) {
            return base.Channel.UpdateMovieTagAsync(movietag);
        }
        
        public void DeleteMovieTagRelationship(MoviesApp.Models.MovieTag movietag, string movieid) {
            base.Channel.DeleteMovieTagRelationship(movietag, movieid);
        }
        
        public System.Threading.Tasks.Task DeleteMovieTagRelationshipAsync(MoviesApp.Models.MovieTag movietag, string movieid) {
            return base.Channel.DeleteMovieTagRelationshipAsync(movietag, movieid);
        }
    }
}
