/*
Deployment script for C:\USERS\PERKINSD\DOCUMENTS\VISUAL STUDIO 2015\PROJECTS\MOVIESAPP\MOVIESAPP.DATATIER\APP_DATA\MOVIEDB.MDF

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "C:\USERS\PERKINSD\DOCUMENTS\VISUAL STUDIO 2015\PROJECTS\MOVIESAPP\MOVIESAPP.DATATIER\APP_DATA\MOVIEDB.MDF"
:setvar DefaultFilePrefix "C_\USERS\PERKINSD\DOCUMENTS\VISUAL STUDIO 2015\PROJECTS\MOVIESAPP\MOVIESAPP.DATATIER\APP_DATA\MOVIEDB.MDF_"
:setvar DefaultDataPath "C:\Users\PerkinsD\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\PerkinsD\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[ActorActorTagRelationships]...';


GO
CREATE TABLE [dbo].[ActorActorTagRelationships] (
    [ActorActorTagRelationshipId] INT IDENTITY (1, 1) NOT NULL,
    [ActorId]                     INT NOT NULL,
    [ActorTagId]                  INT NOT NULL,
    PRIMARY KEY CLUSTERED ([ActorActorTagRelationshipId] ASC)
);


GO
PRINT N'Creating [dbo].[ActorMovieRelationships]...';


GO
CREATE TABLE [dbo].[ActorMovieRelationships] (
    [ActorMovieRelationshipId] INT      IDENTITY (1, 1) NOT NULL,
    [MovieId]                  CHAR (9) NOT NULL,
    [ActorId]                  INT      NOT NULL,
    PRIMARY KEY CLUSTERED ([ActorMovieRelationshipId] ASC)
);


GO
PRINT N'Creating [dbo].[Actors]...';


GO
CREATE TABLE [dbo].[Actors] (
    [ActorId]   INT          IDENTITY (1, 1) NOT NULL,
    [Name]      VARCHAR (50) NOT NULL,
    [Favorited] INT          NULL,
    PRIMARY KEY CLUSTERED ([ActorId] ASC)
);


GO
PRINT N'Creating [dbo].[ActorTags]...';


GO
CREATE TABLE [dbo].[ActorTags] (
    [ActorTagId]     INT          IDENTITY (1, 1) NOT NULL,
    [TagDescription] VARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([ActorTagId] ASC)
);


GO
PRINT N'Creating [dbo].[MovieMovieTagRelationships]...';


GO
CREATE TABLE [dbo].[MovieMovieTagRelationships] (
    [MovieMovieTagRelationshipId] INT      IDENTITY (1, 1) NOT NULL,
    [MovieId]                     CHAR (9) NOT NULL,
    [MovieTagId]                  INT      NOT NULL,
    PRIMARY KEY CLUSTERED ([MovieMovieTagRelationshipId] ASC)
);


GO
PRINT N'Creating [dbo].[Movies]...';


GO
CREATE TABLE [dbo].[Movies] (
    [MovieId]    CHAR (9)      NOT NULL,
    [Title]      VARCHAR (150) NOT NULL,
    [Year]       DATETIME2 (7) NULL,
    [Rated]      VARCHAR (5)   NOT NULL,
    [Released]   DATETIME      NULL,
    [Genre]      VARCHAR (50)  NOT NULL,
    [Director]   VARCHAR (50)  NOT NULL,
    [Writer]     VARCHAR (50)  NOT NULL,
    [Plot]       VARCHAR (500) NOT NULL,
    [Language]   VARCHAR (50)  NOT NULL,
    [Country]    VARCHAR (10)  NOT NULL,
    [Awards]     VARCHAR (250) NOT NULL,
    [Poster]     VARCHAR (500) NOT NULL,
    [Metascore]  INT           NOT NULL,
    [ImdbRating] VARCHAR (4)   NOT NULL,
    [ImdbVotes]  VARCHAR (20)  NOT NULL,
    [Type]       VARCHAR (10)  NOT NULL,
    [Response]   VARCHAR (10)  NOT NULL,
    [Favorited]  INT           NULL,
    [Watched]    INT           NULL,
    PRIMARY KEY CLUSTERED ([MovieId] ASC)
);


GO
PRINT N'Creating [dbo].[MovieTags]...';


GO
CREATE TABLE [dbo].[MovieTags] (
    [MovieTagId]     INT          IDENTITY (1, 1) NOT NULL,
    [TagDescription] VARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([MovieTagId] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Actors]...';


GO
ALTER TABLE [dbo].[Actors]
    ADD DEFAULT 0 FOR [Favorited];


GO
PRINT N'Creating unnamed constraint on [dbo].[Movies]...';


GO
ALTER TABLE [dbo].[Movies]
    ADD DEFAULT 0 FOR [Favorited];


GO
PRINT N'Creating unnamed constraint on [dbo].[Movies]...';


GO
ALTER TABLE [dbo].[Movies]
    ADD DEFAULT 0 FOR [Watched];


GO
PRINT N'Creating [dbo].[FK_ActorActorTagRelationships_ActorId_Actors_ActorId]...';


GO
ALTER TABLE [dbo].[ActorActorTagRelationships]
    ADD CONSTRAINT [FK_ActorActorTagRelationships_ActorId_Actors_ActorId] FOREIGN KEY ([ActorId]) REFERENCES [dbo].[Actors] ([ActorId]);


GO
PRINT N'Creating [dbo].[FK_ActorActorTagRelationships_ActorTagId_ActorTags_ActorTagId]...';


GO
ALTER TABLE [dbo].[ActorActorTagRelationships]
    ADD CONSTRAINT [FK_ActorActorTagRelationships_ActorTagId_ActorTags_ActorTagId] FOREIGN KEY ([ActorTagId]) REFERENCES [dbo].[ActorTags] ([ActorTagId]);


GO
PRINT N'Creating [dbo].[FK_ActorMovieRelationships_ActorID_Actors_ActorID]...';


GO
ALTER TABLE [dbo].[ActorMovieRelationships]
    ADD CONSTRAINT [FK_ActorMovieRelationships_ActorID_Actors_ActorID] FOREIGN KEY ([ActorId]) REFERENCES [dbo].[Actors] ([ActorId]);


GO
PRINT N'Creating [dbo].[FK_ActorMovieRelationships_MovieID_Movies_MovieID]...';


GO
ALTER TABLE [dbo].[ActorMovieRelationships]
    ADD CONSTRAINT [FK_ActorMovieRelationships_MovieID_Movies_MovieID] FOREIGN KEY ([MovieId]) REFERENCES [dbo].[Movies] ([MovieId]);


GO
PRINT N'Creating [dbo].[FK_MovieMovieTagRelationships_MovieId_Movies_MovieId]...';


GO
ALTER TABLE [dbo].[MovieMovieTagRelationships]
    ADD CONSTRAINT [FK_MovieMovieTagRelationships_MovieId_Movies_MovieId] FOREIGN KEY ([MovieId]) REFERENCES [dbo].[Movies] ([MovieId]);


GO
PRINT N'Creating [dbo].[FK_MovieMovieTagRelationships_MovieTagId_MovieTags_MovieTagId]...';


GO
ALTER TABLE [dbo].[MovieMovieTagRelationships]
    ADD CONSTRAINT [FK_MovieMovieTagRelationships_MovieTagId_MovieTags_MovieTagId] FOREIGN KEY ([MovieTagId]) REFERENCES [dbo].[MovieTags] ([MovieTagId]);


GO
PRINT N'Creating [dbo].[AMRSEEDER]...';


GO
CREATE PROCEDURE [dbo].[AMRSEEDER]


AS
SET IDENTITY_INSERT [dbo].[Actors] ON
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (1, N'Alan Rickman', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (2, N'Mark Hamill', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (3, N'Stanley Tucci', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (4, N'Wes Bentley', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (5, N'Jennifer Lawrence', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (6, N'Willow Shields', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (7, N'Anne Hathaway', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (8, N'Patrick Wilson', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (9, N'Andre Braugher', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (10, N'Dianne Wiest', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (11, N'Bradley Cooper', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (12, N'Jake Gyllenhaal', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (13, N'Robert De Niro', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (14, N'Rene Russo', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (15, N'Anders Holm', 0)
INSERT INTO [dbo].[Actors] ([ActorId], [Name], [Favorited]) VALUES (16, N'Bob Bobberson', 0)
SET IDENTITY_INSERT [dbo].[Actors] OFF


INSERT INTO [dbo].[Movies] ([MovieId], [Title], [Year], [Rated], [Released], [Genre], [Director], [Writer], [Plot], [Language], [Country], [Awards], [Poster], [Metascore], [ImdbRating], [ImdbVotes], [Type], [Response], [Favorited], [Watched]) VALUES (N'tt0076759', N'Star Wars: Episode IV - A New Hope', NULL, N'PG', NULL, N'Action, Adventure, Fantasy', N'George Lucas', N'George Lucas', N'Luke Skywalker joins forces with a Jedi Knight, a cocky pilot, a wookiee and two droids to save the galaxy from the Empire''s world-destroying battle-station, while also attempting to rescue Princess Leia from the evil Darth Vader.', N'English', N'USA', N'Won 6 Oscars. Another 48 wins & 28 nominations.', N'https:\/\/images-na.ssl-images-amazon.com\/images\/M\/MV5BYzQ2OTk4N2QtOGQwNy00MmI3LWEwNmEtOTk0OTY3NDk2MGJkL2ltYWdlL2ltYWdlXkEyXkFqcGdeQXVyNjc1NTYyMjg@._V1_SX300.jpg', 92, N'8.7', N'0', N'movie', N'True', 0, 0)
INSERT INTO [dbo].[Movies] ([MovieId], [Title], [Year], [Rated], [Released], [Genre], [Director], [Writer], [Plot], [Language], [Country], [Awards], [Poster], [Metascore], [ImdbRating], [ImdbVotes], [Type], [Response], [Favorited], [Watched]) VALUES (N'tt0449487', N'Passengers', N'2008-01-01 00:00:00', N'PG-13', N'2008-10-24 00:00:00', N'Drama, Mystery, Romance', N'Rodrigo García', N'Ronnie Christensen', N'A grief counselor working with a group of plane-crash survivors finds herself at the root of a mystery when her clients begin to disappear.', N'English', N'USA, Canad', N'N/A', N'https://images-na.ssl-images-amazon.com/images/M/MV5BMTQ3ODE5MjIzMV5BMl5BanBnXkFtZTcwNTc4Nzc5MQ@@._V1_SX300.jpg', 40, N'5.9', N'28,220', N'movie', N'True', 0, 1)
INSERT INTO [dbo].[Movies] ([MovieId], [Title], [Year], [Rated], [Released], [Genre], [Director], [Writer], [Plot], [Language], [Country], [Awards], [Poster], [Metascore], [ImdbRating], [ImdbVotes], [Type], [Response], [Favorited], [Watched]) VALUES (N'tt0758752', N'Love & Other Drugs', N'2010-01-01 00:00:00', N'R', N'2010-11-24 00:00:00', N'Comedy, Drama, Romance', N'Edward Zwick', N'Charles Randolph (screenplay), Edward Zwick (scree', N'A young woman suffering from Parkinson''s befriends a drug rep working for Pfizer in 1990s Pittsburgh.', N'English', N'USA', N'Nominated for 2 Golden Globes. Another 1 win & 4 nominations.', N'https://images-na.ssl-images-amazon.com/images/M/MV5BMTgxOTczODEyMF5BMl5BanBnXkFtZTcwMDc0NDY4Mw@@._V1_SX300.jpg', 55, N'6.7', N'147,601', N'movie', N'True', 1, 0)
INSERT INTO [dbo].[Movies] ([MovieId], [Title], [Year], [Rated], [Released], [Genre], [Director], [Writer], [Plot], [Language], [Country], [Awards], [Poster], [Metascore], [ImdbRating], [ImdbVotes], [Type], [Response], [Favorited], [Watched]) VALUES (N'tt1201607', N'Harry Potter and the Deathly Hallows: Part 2', NULL, N'PG-13', NULL, N'Adventure, Drama, Fantasy', N'David Yates', N'Steve Kloves (screenplay), J.K. Rowling (novel)', N'Harry, Ron and Hermione search for Voldemort''s remaining Horcruxes in their effort to destroy the Dark Lord as the final battle rages on at Hogwarts.', N'English', N'USA, UK', N'Nominated for 3 Oscars. Another 46 wins & 87 nominations.', N'https:\/\/images-na.ssl-images-amazon.com\/images\/M\/MV5BMTY2MTk3MDQ1N15BMl5BanBnXkFtZTcwMzI4NzA2NQ@@._V1_SX300.jpg', 87, N'8.1', N'0', N'movie', N'True', 0, 1)
INSERT INTO [dbo].[Movies] ([MovieId], [Title], [Year], [Rated], [Released], [Genre], [Director], [Writer], [Plot], [Language], [Country], [Awards], [Poster], [Metascore], [ImdbRating], [ImdbVotes], [Type], [Response], [Favorited], [Watched]) VALUES (N'tt1247690', N'Serena', N'2014-01-01 00:00:00', N'R', N'2015-02-26 00:00:00', N'Drama, Romance', N'Susanne Bier', N'Christopher Kyle (screenplay), Ron Rash (based on ', N'In Depression-era North Carolina, the future of George Pemberton''s timber empire becomes complicated when he marries Serena.', N'English', N'Czech Repu', N'1 win.', N'https://images-na.ssl-images-amazon.com/images/M/MV5BMTExMDY2OTYxMTNeQTJeQWpwZ15BbWU4MDc2NDE5MTQx._V1_SX300.jpg', 36, N'5.4', N'18,803', N'movie', N'True', 1, 0)
INSERT INTO [dbo].[Movies] ([MovieId], [Title], [Year], [Rated], [Released], [Genre], [Director], [Writer], [Plot], [Language], [Country], [Awards], [Poster], [Metascore], [ImdbRating], [ImdbVotes], [Type], [Response], [Favorited], [Watched]) VALUES (N'tt1392170', N'The Hunger Games', N'2012-01-01 00:00:00', N'PG-13', N'2012-03-23 00:00:00', N'Action, Adventure, Sci-Fi', N'Gary Ross', N'Gary Ross (screenplay), Suzanne Collins (screenpla', N'Katniss Everdeen voluntarily takes her younger sister''s place in the Hunger Games, a televised competition in which two teenagers from each of the twelve Districts of Panem are chosen at random to fight to the death.', N'English', N'USA', N'Nominated for 1 Golden Globe. Another 33 wins & 42 nominations.', N'https://images-na.ssl-images-amazon.com/images/M/MV5BMjA4NDg3NzYxMF5BMl5BanBnXkFtZTcwNTgyNzkyNw@@._V1_SX300.jpg', 68, N'7.2', N'720,888', N'movie', N'True', 0, 1)
INSERT INTO [dbo].[Movies] ([MovieId], [Title], [Year], [Rated], [Released], [Genre], [Director], [Writer], [Plot], [Language], [Country], [Awards], [Poster], [Metascore], [ImdbRating], [ImdbVotes], [Type], [Response], [Favorited], [Watched]) VALUES (N'tt2361509', N'The Intern', N'2015-01-01 00:00:00', N'PG-13', N'2015-09-25 00:00:00', N'Comedy, Drama', N'Nancy Meyers', N'Nancy Meyers', N'70-year-old widower Ben Whittaker has discovered that retirement isn''t all it''s cracked up to be. Seizing an opportunity to get back in the game, he becomes a senior intern at an online fashion site, founded and run by Jules Ostin.', N'English', N'USA', N'1 win & 6 nominations.', N'https://images-na.ssl-images-amazon.com/images/M/MV5BMTUyNjE5NjI5OF5BMl5BanBnXkFtZTgwNzYzMzU3NjE@._V1_SX300.jpg', 51, N'7.1', N'149,758', N'movie', N'True', 1, 0)


SET IDENTITY_INSERT [dbo].[ActorMovieRelationships] ON
INSERT INTO [dbo].[ActorMovieRelationships] ([ActorMovieRelationshipId], [MovieId], [ActorId]) VALUES (3, N'tt1392170', 3)
INSERT INTO [dbo].[ActorMovieRelationships] ([ActorMovieRelationshipId], [MovieId], [ActorId]) VALUES (4, N'tt1392170', 4)
INSERT INTO [dbo].[ActorMovieRelationships] ([ActorMovieRelationshipId], [MovieId], [ActorId]) VALUES (5, N'tt1392170', 5)
INSERT INTO [dbo].[ActorMovieRelationships] ([ActorMovieRelationshipId], [MovieId], [ActorId]) VALUES (6, N'tt1392170', 6)
INSERT INTO [dbo].[ActorMovieRelationships] ([ActorMovieRelationshipId], [MovieId], [ActorId]) VALUES (7, N'tt0449487', 7)
INSERT INTO [dbo].[ActorMovieRelationships] ([ActorMovieRelationshipId], [MovieId], [ActorId]) VALUES (8, N'tt0449487', 8)
INSERT INTO [dbo].[ActorMovieRelationships] ([ActorMovieRelationshipId], [MovieId], [ActorId]) VALUES (9, N'tt0449487', 9)
INSERT INTO [dbo].[ActorMovieRelationships] ([ActorMovieRelationshipId], [MovieId], [ActorId]) VALUES (10, N'tt0449487', 10)
INSERT INTO [dbo].[ActorMovieRelationships] ([ActorMovieRelationshipId], [MovieId], [ActorId]) VALUES (11, N'tt1247690', 11)
INSERT INTO [dbo].[ActorMovieRelationships] ([ActorMovieRelationshipId], [MovieId], [ActorId]) VALUES (12, N'tt0758752', 12)
INSERT INTO [dbo].[ActorMovieRelationships] ([ActorMovieRelationshipId], [MovieId], [ActorId]) VALUES (13, N'tt2361509', 13)
INSERT INTO [dbo].[ActorMovieRelationships] ([ActorMovieRelationshipId], [MovieId], [ActorId]) VALUES (14, N'tt2361509', 7)
INSERT INTO [dbo].[ActorMovieRelationships] ([ActorMovieRelationshipId], [MovieId], [ActorId]) VALUES (15, N'tt2361509', 14)
INSERT INTO [dbo].[ActorMovieRelationships] ([ActorMovieRelationshipId], [MovieId], [ActorId]) VALUES (16, N'tt2361509', 15)
SET IDENTITY_INSERT [dbo].[ActorMovieRelationships] OFF

SET IDENTITY_INSERT [dbo].[MovieTags] ON
INSERT INTO [dbo].[MovieTags] ([MovieTagId], [TagDescription]) VALUES (1, N'Funny')
INSERT INTO [dbo].[MovieTags] ([MovieTagId], [TagDescription]) VALUES (2, N'Sad')
INSERT INTO [dbo].[MovieTags] ([MovieTagId], [TagDescription]) VALUES (3, N'Happy')
SET IDENTITY_INSERT [dbo].[MovieTags] OFF

SET IDENTITY_INSERT [dbo].[MovieMovieTagRelationships] ON
INSERT INTO [dbo].[MovieMovieTagRelationships] ([MovieMovieTagRelationshipId], [MovieId], [MovieTagId]) VALUES (1, N'tt0758752', 3)
SET IDENTITY_INSERT [dbo].[MovieMovieTagRelationships] OFF


RETURN 0
GO
PRINT N'Creating [dbo].[GetActorTagByName]...';


GO
CREATE PROCEDURE [dbo].[GetActorTagByName]
	@TagDescription varchar(50)
AS
	SELECT ActorTagId, TagDescription
	FROM dbo.ActorTags
	WHERE @TagDescription = TagDescription
RETURN 0
GO
PRINT N'Creating [dbo].[usp_DelActorActorTagRelationships]...';


GO
CREATE PROCEDURE [dbo].[usp_DelActorActorTagRelationships]
	@ActorActorTagRelationshipId int
AS
	DELETE FROM ActorActorTagRelationships
	WHERE ActorActorTagRelationshipId = @ActorActorTagRelationshipId
RETURN 0
GO
PRINT N'Creating [dbo].[usp_DelActorMovieRelationship]...';


GO
CREATE PROCEDURE [dbo].[usp_DelActorMovieRelationship]
	@ActorMovieRelationshipId  int
AS
	DELETE FROM ActorMovieRelationships
	WHERE ActorMovieRelationshipId = @ActorMovieRelationshipId
RETURN 0
GO
PRINT N'Creating [dbo].[usp_DelActorTag]...';


GO
CREATE PROCEDURE [dbo].[usp_DelActorTag]
	@id int
AS
	DELETE FROM MovieTags
	WHERE MovieTagId = @id
RETURN 0
GO
PRINT N'Creating [dbo].[usp_DelMovieMovieTagRelationships]...';


GO
CREATE PROCEDURE [dbo].[usp_DelMovieMovieTagRelationships]
	@MovieMovieTagRelationshipId int
AS
	DELETE FROM MovieMovieTagRelationships
	WHERE MovieMovieTagRelationshipId = @MovieMovieTagRelationshipId
RETURN 0
GO
PRINT N'Creating [dbo].[usp_DelMovieTag]...';


GO
CREATE PROCEDURE [dbo].[usp_DelMovieTag]
	@id int
AS
	DELETE FROM MovieTags
	WHERE MovieTagID = @id
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetActorActorTagRelationships]...';


GO
CREATE PROCEDURE [dbo].[usp_GetActorActorTagRelationships]
	@ActorTagId int,
	@ActorId int
AS
	SELECT ActorId, ActorTagId, ActorActorTagRelationshipId
	FROM dbo.ActorActorTagRelationships
	WHERE ActorTagId = @ActorTagId
	AND ActorId = @ActorId
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetActorById]...';


GO
CREATE PROCEDURE [dbo].[usp_GetActorById]
	@id int
AS
	SELECT * 
	FROM Actors a
	JOIN ActorMovieRelationships amr
	ON amr.ActorId = a.ActorId
	JOIN Movies m
	ON m.MovieId = amr.MovieId
	WHERE a.ActorId = @id
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetActorByName]...';


GO
CREATE PROCEDURE [dbo].[usp_GetActorByName]
	@Name varchar(50)
AS
	SELECT *
	FROM Actors a
	LEFT OUTER JOIN ActorMovieRelationships amr
	ON amr.ActorId = a.ActorId
	LEFT OUTER JOIN Movies m
	ON m.MovieId = amr.MovieId
	LEFT OUTER JOIN ActorActorTagRelationships aatr
	ON aatr.ActorId = a.ActorId
	LEFT OUTER JOIN ActorTags at
	ON at.ActorTagId = aatr.ActorTagId
	WHERE a.Name = @Name
	ORDER BY a.ActorId, aatr.ActorTagId
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetActorMovieRelationship]...';


GO
CREATE PROCEDURE [dbo].[usp_GetActorMovieRelationship]
	@MovieId char(9),
	@ActorId int
AS
	SELECT *
	FROM ActorMovieRelationships
	WHERE MovieId = @MovieId
	AND 
	ActorId = @ActorId
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetActorMovieRelationshipByActor]...';


GO
CREATE PROCEDURE [dbo].[usp_GetActorMovieRelationshipByActor]
	@ActorId int
AS
	SELECT *
	FROM ActorMovieRelationships
	WHERE ActorId = @ActorId 
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetActorMovieRelationshipById]...';


GO
CREATE PROCEDURE [dbo].[usp_GetActorMovieRelationshipById]
	@ActorMovieRelationshipId int
AS
	SELECT * 
	FROM ActorMovieRelationships
	WHERE ActorMovieRelationshipId = @ActorMovieRelationshipId
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetActorMovieRelationshipByMovie]...';


GO
CREATE PROCEDURE [dbo].[usp_GetActorMovieRelationshipByMovie]
	@MovieId char(9)
AS
	SELECT *
	FROM ActorMovieRelationships
	WHERE MovieId = @MovieId
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetActorTagById]...';


GO
CREATE PROCEDURE [dbo].[usp_GetActorTagById]
	@id int
AS
	SELECT * 
	FROM ActorTags
	WHERE ActorTags.ActorTagID = @id
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetAllActors]...';


GO
CREATE PROCEDURE [dbo].[usp_GetAllActors]
AS
	SELECT *
	FROM Actors a
	LEFT OUTER JOIN ActorMovieRelationships amr
	ON amr.ActorId = a.ActorId
	LEFT OUTER JOIN Movies m
	ON m.MovieId = amr.MovieId
	LEFT OUTER JOIN ActorActorTagRelationships aatr
	ON aatr.ActorId = a.ActorId
	LEFT OUTER JOIN ActorTags at
	ON at.ActorTagId = aatr.ActorTagId
	ORDER BY a.ActorId, aatr.ActorTagId
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetAllActorTags]...';


GO
CREATE PROCEDURE [dbo].[usp_GetAllActorTags]
AS
	SELECT *
	FROM ActorTags
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetAllMovies]...';


GO
CREATE PROCEDURE [dbo].[usp_GetAllMovies]
AS
	SELECT *
	FROM dbo.Movies m
	LEFT OUTER JOIN dbo.ActorMovieRelationships amr
	ON amr.MovieID = m.MovieID
	LEFT OUTER JOIN dbo.Actors a
	ON a.ActorID = amr.ActorID
	LEFT OUTER JOIN MovieMovieTagRelationships mmtr
	ON m.MovieId = mmtr.MovieId
	LEFT OUTER JOIN dbo.MovieTags mt
	ON mt.MovieTagId = mmtr.MovieTagId
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetAllMovieTags]...';


GO
CREATE PROCEDURE [dbo].[usp_GetAllMovieTags]
AS
	SELECT *
	FROM MovieTags
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetMovieByTitle]...';


GO
CREATE PROCEDURE [dbo].[usp_GetMovieByTitle]
	@title varchar(150)
AS
	SELECT *
	FROM dbo.Movies m
	LEFT OUTER JOIN dbo.ActorMovieRelationships amr
	ON amr.MovieId = m.MovieId
	LEFT OUTER JOIN dbo.Actors a
	ON a.ActorId = amr.ActorId
	LEFT OUTER JOIN MovieMovieTagRelationships mmtr
	ON m.MovieId = mmtr.MovieId
	LEFT OUTER JOIN dbo.MovieTags mt
	ON mt.MovieTagId = mmtr.MovieTagId
	WHERE m.Title = @title

RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetMovieMovieTagRelationships]...';


GO
CREATE PROCEDURE [dbo].[usp_GetMovieMovieTagRelationships]
	@MovieTagId int,
	@MovieId char(9)
AS
	SELECT MovieId, MovieTagId, MovieMovieTagRelationshipId
	FROM dbo.MovieMovieTagRelationships
	WHERE MovieTagId = @MovieTagId
	AND MovieId = @MovieId
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetMovieMovieTagRelationshipsByMovieTag]...';


GO
CREATE PROCEDURE [dbo].[usp_GetMovieMovieTagRelationshipsByMovieTag]
	@MovieTagId int
AS
	SELECT MovieId, MovieTagId, MovieMovieTagRelationshipId
	FROM dbo.MovieMovieTagRelationships
	WHERE MovieTagId = @MovieTagId
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetMoviesById]...';


GO
CREATE PROCEDURE [dbo].[usp_GetMoviesById]
	@id char(9)
AS
	SELECT * 
	FROM dbo.Movies m
	LEFT OUTER JOIN dbo.ActorMovieRelationships amr
	ON amr.MovieID = m.MovieID
	LEFT OUTER JOIN dbo.Actors a
	ON a.ActorID = amr.ActorID
	LEFT OUTER JOIN MovieMovieTagRelationships mmtr
	ON m.MovieId = mmtr.MovieId
	LEFT OUTER JOIN dbo.MovieTags mt
	ON mt.MovieTagId = mmtr.MovieTagId
	WHERE m.MovieID = @id
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetMovieTagById]...';


GO
CREATE PROCEDURE [dbo].[usp_GetMovieTagById]
	@id int
AS
	SELECT * 
	FROM MovieTags
	WHERE MovieTagId = @id
RETURN 0
GO
PRINT N'Creating [dbo].[usp_GetMovieTagsByMovie]...';


GO
CREATE PROCEDURE [dbo].[usp_GetMovieTagsByMovie]
	@MovieId char(9)
AS
	SELECT mt.MovieTagId, mt.TagDescription
	FROM dbo.MovieMovieTagRelationships mmtr
	LEFT OUTER JOIN dbo.MovieTags mt
	ON mmtr.MovieTagId = mt.MovieTagId
	WHERE MovieId = @MovieId
RETURN 0
GO
PRINT N'Creating [dbo].[usp_InsActor]...';


GO
CREATE PROCEDURE [dbo].[usp_InsActor]
	@Name varchar(50),
	@Favorited int
AS
	INSERT INTO Actors (Name, Favorited)
	OUTPUT INSERTED.ActorId
	VALUES (@Name, @Favorited)
RETURN 0
GO
PRINT N'Creating [dbo].[usp_InsActorActorTagRelationships]...';


GO
CREATE PROCEDURE [dbo].[usp_InsActorActorTagRelationships]
	@ActorTagId int,
	@ActorId int
AS
	INSERT INTO dbo.ActorActorTagRelationships (ActorId, ActorTagId)
	VALUES (@ActorId, @ActorTagId)
RETURN 0
GO
PRINT N'Creating [dbo].[usp_InsActorMovieRelationship]...';


GO
CREATE PROCEDURE [dbo].[usp_InsActorMovieRelationship]
	@MovieId char(9),
	@ActorId int
AS
	INSERT INTO ActorMovieRelationships (MovieId, ActorId)
	VALUES (@MovieId, @ActorId)
RETURN 0
GO
PRINT N'Creating [dbo].[usp_InsActorTag]...';


GO
CREATE PROCEDURE [dbo].[usp_InsActorTag]
	@TagDescription varchar(20)
AS
	INSERT INTO ActorTags(TagDescription)
	OUTPUT INSERTED.ActorTagId
	VALUES (@TagDescription)
RETURN 0
GO
PRINT N'Creating [dbo].[usp_InsMovie]...';


GO
CREATE PROCEDURE [dbo].[usp_InsMovie]
	@MovieId char(9),
	@Title varchar(150),
	@Year datetime2,
	@Rated varchar(5),
	@Released datetime,
	@Genre varchar(50),
	@Director varchar(50),
	@Writer varchar(50),
	@Plot varchar(500),
	@Language varchar(50),
	@Country varchar(10),
	@Awards varchar(250),
	@Poster varchar(500),
	@Metascore int,
	@Favorited int,
	@Watched int,
	@ImdbRating varchar(4),
	@ImdbVotes varchar(20),
	@Type varchar(10),
	@Response varchar(10)
AS
	INSERT INTO Movies (MovieID, Title, Year, Rated, Released, Genre, Director, Writer, Plot, Language, Country, Awards, Poster, Metascore, ImdbRating, ImdbVotes, Watched, Favorited, Type, Response)
	VALUES (@MovieID, @Title, @Year, @Rated, @Released, @Genre, @Director, @Writer, @Plot, @Language, @Country, @Awards, @Poster, @Metascore, @ImdbRating, @ImdbVotes, @Watched, @Favorited, @Type, @Response)
RETURN 0
GO
PRINT N'Creating [dbo].[usp_InsMovieMovieTagRelationships]...';


GO
CREATE PROCEDURE [dbo].[usp_InsMovieMovieTagRelationships]
	@MovieTagId int,
	@MovieId char(9)
AS
	INSERT INTO dbo.MovieMovieTagRelationships (MovieId, MovieTagId)
	VALUES (@MovieId, @MovieTagId)
RETURN 0
GO
PRINT N'Creating [dbo].[usp_InsMovieTag]...';


GO
CREATE PROCEDURE [dbo].[usp_InsMovieTag]
	@TagDescription varchar(20)
AS
	INSERT INTO MovieTags(TagDescription)
	OUTPUT INSERTED.MovieTagId
	VALUES (@TagDescription)
RETURN 0
GO
PRINT N'Creating [dbo].[usp_UpdActor]...';


GO
CREATE PROCEDURE [dbo].[usp_UpdActor]
	@ActorId int,
	@Name varchar(50),
	@Favorited int
AS
	UPDATE Actors
	SET Name = @Name, Favorited = @Favorited
	WHERE ActorId = @ActorId
RETURN 0
GO
PRINT N'Creating [dbo].[usp_UpdActorTags]...';


GO
CREATE PROCEDURE [dbo].[usp_UpdActorTags]
	@ActorTagID int,
	@TagDescription varchar(20),
	@ActorID int
AS
	UPDATE ActorTags
	SET TagDescription = @TagDescription
	WHERE ActorTagID = @ActorTagID
RETURN 0
GO
PRINT N'Creating [dbo].[usp_UpdMovie]...';


GO
CREATE PROCEDURE [dbo].[usp_UpdMovie]
	@MovieID char(9),
	@Title varchar(150),
	@Year datetime2,
	@Rated varchar(5),
	@Released datetime,
	@Genre varchar(50),
	@Director varchar(50),
	@Writer varchar(50),
	@Plot varchar(500),
	@Language varchar(50),
	@Country varchar(10),
	@Awards varchar(250),
	@Poster varchar(500),
	@Metascore int,
	@ImdbRating varchar(4),
	@ImdbVotes varchar(20),
	@Favorited int,
	@Watched int,
	@Type varchar(10),
	@Response varchar(10)
AS
	UPDATE Movies
	SET Title = @Title, 
	Year = @Year, 
	Rated = @Rated, 
	Released = @Released, 
	Genre = @Genre, 
	Director = @Director, 
	Writer = @Writer, 
	Plot = @Plot, 
	Language = @Language, 
	Country = @Country, 
	Awards = @Awards, 
	Poster = @Poster, 
	Metascore = @Metascore, 
	ImdbRating = @ImdbRating, 
	ImdbVotes = @ImdbVotes, 
	Type = @Type,
	Favorited = @Favorited,
	Watched = @Watched, 
	Response = @Response

	WHERE MovieID = @MovieID
RETURN 0
GO
PRINT N'Creating [dbo].[usp_UpdMovieTags]...';


GO
CREATE PROCEDURE [dbo].[usp_UpdMovieTags]
	@MovieTagID int,
	@TagDescription varchar(20)
AS
	UPDATE MovieTags
	SET TagDescription = @TagDescription
	WHERE MovieTagID = @MovieTagID
RETURN 0
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4c2bbbbf-1e69-4aaf-aca1-c0e3f3723ef9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4c2bbbbf-1e69-4aaf-aca1-c0e3f3723ef9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c177cd01-e404-4d2b-97c9-4ff28fdf3c11')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c177cd01-e404-4d2b-97c9-4ff28fdf3c11')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bd053ee6-165d-4427-9a63-e0adba56ef70')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bd053ee6-165d-4427-9a63-e0adba56ef70')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '16f92825-5d14-4642-8cee-9cbb860fd5f4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('16f92825-5d14-4642-8cee-9cbb860fd5f4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0b85b4cb-3df6-4fa6-8276-c1904f18eb20')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0b85b4cb-3df6-4fa6-8276-c1904f18eb20')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '20aee7ff-c5ec-4384-b196-1142898e27ed')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('20aee7ff-c5ec-4384-b196-1142898e27ed')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'adce08ae-39fe-43cd-9cd3-09c623193435')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('adce08ae-39fe-43cd-9cd3-09c623193435')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
